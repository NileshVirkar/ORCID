<!--

    =============================================================================

    ORCID (R) Open Source
    http://orcid.org

    Copyright (c) 2012-2014 ORCID, Inc.
    Licensed under an MIT-Style License (MIT)
    http://orcid.org/open-source-license

    This copyright and license information (including a link to the full license)
    shall be included in its entirety in all copies or substantial portion of
    the software.

    =============================================================================

-->
<databaseChangeLog xmlns="http://www.liquibase.org/xml/ns/dbchangelog" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                   xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-2.0.xsd">
        
    <changeSet id="ADD-WORK-EXTERNAL-IDS-JSON-COLUMN" author="Will Simpson">
        <preConditions onFail="MARK_RAN">
            <not>
                <columnExists tableName="work" columnName="external_ids_json"/>
            </not>
        </preConditions>
        <addColumn tableName="work">
            <column name="external_ids_json" type="text" />
        </addColumn>
    </changeSet>
    
    <changeSet id="CONVERT-TEXT-TO-JSON" author="Will Simpson" dbms="postgresql">
        <preConditions onFail="MARK_RAN">
            <not>
                <indexExists indexName="work_doi_idx"/>
            </not>
        </preConditions>
        <sql>ALTER TABLE work ALTER COLUMN contributors_json TYPE json USING contributors_json::JSON</sql>
        <sql>ALTER TABLE work ALTER COLUMN external_ids_json TYPE json USING external_ids_json::JSON</sql>
        <createProcedure>
CREATE OR REPLACE FUNCTION json_intext(text) RETURNS json AS $$
SELECT json_in($1::cstring);
$$ LANGUAGE SQL IMMUTABLE;
ALTER FUNCTION json_intext(text) OWNER TO orcid;
        </createProcedure>
        <createProcedure>
CREATE OR REPLACE FUNCTION extract_doi(json) RETURNS varchar
AS $$
SELECT j->'workExternalIdentifierId'->>'content'
FROM (SELECT json_array_elements(json_extract_path($1, 'workExternalIdentifier')) AS j) AS a
WHERE j->>'workExternalIdentifierType' = 'DOI'
ORDER BY length(j->'workExternalIdentifierId'->>'content') DESC
LIMIT 1;
$$ LANGUAGE SQL
IMMUTABLE
RETURNS NULL ON NULL INPUT;
ALTER FUNCTION extract_doi(json) OWNER TO orcid;
        </createProcedure>
        <createIndex tableName="work" indexName="work_doi_idx">
            <column name="extract_doi(external_ids_json)"></column>
        </createIndex>
    </changeSet>
    
    <changeSet id="ADD-JSON-CAST" author="Will Simpson" dbms="postgresql">
        <!-- 
            This needs to be run as a super user, which can be done in your development environment by
            changing into the orcid-persistence dir in your git repo and running the following
            mvn liquibase:update -Dliquibase.changeLogFile=src/main/resources/db/updates/work-external-ids-as-json.xml -Dliquibase.username=postgres -Dliquibase.password=postgres
        -->
        <preConditions onFail="CONTINUE" onError="WARN">
            <runningAs username="postgres"/>
            <not><sqlCheck expectedResult="123">select ('{"a":123}'::varchar)->'a'</sqlCheck></not>
        </preConditions>
        <sql>CREATE CAST (character varying AS json) WITH FUNCTION json_intext(text) AS IMPLICIT;</sql>
    </changeSet>
    
</databaseChangeLog>